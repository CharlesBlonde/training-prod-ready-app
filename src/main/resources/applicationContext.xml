<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:security-extras="http://www.xebia.fr/schema/xebia-spring-security-extras"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:management="http://www.xebia.fr/schema/xebia-management-extras"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:cxf="http://cxf.apache.org/core"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
		http://www.xebia.fr/schema/xebia-management-extras http://www.xebia.fr/schema/management/xebia-management-extras.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.xebia.fr/schema/xebia-spring-security-extras http://www.xebia.fr/schema/security/xebia-spring-security-extras.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd">


    <context:property-placeholder system-properties-mode="OVERRIDE" properties-ref="profileSpecificProperties"/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <context:annotation-config/>
    <tx:annotation-driven/>
    <security-extras:audit-aspect/>
    <management:profile-aspect server="mbeanServer"/>
    <management:application-version-mbean/>

    <!-- JMX -->
    <context:mbean-server id="mbeanServer"/>
    <context:mbean-export server="mbeanServer"/>

    <!-- SECURITY -->
    <sec:http auto-config='true' realm="Production Ready Application" create-session="never">
        <!-- don't create session as WS calls are stateless even if they are authenticated -->
        <sec:intercept-url pattern="/services/**" access="ROLE_USER"/>
        <sec:http-basic/>
        <sec:anonymous/>
    </sec:http>


    <sec:authentication-manager>
        <sec:authentication-provider>
            <sec:password-encoder hash="{ssha}">
                <sec:salt-source user-property="username"/>
            </sec:password-encoder>
            <sec:jdbc-user-service data-source-ref="dataSource"/>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <sec:jdbc-user-service id="userDetailsManager" data-source-ref="dataSource"/>

    <!-- JPA / ENTITY MANAGER / HIBERNATE -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="production-ready-application-persistence-unit"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${hibernate_dialect}"/>
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <!-- Override properties defined in /META-INF/persistence.xml -->
                <prop key="hibernate.cache.region.factory_class">
                    org.hibernate.cache.ehcache.EhCacheRegionFactory
                </prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_structured_entries">true</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.dialect">${hibernate_dialect}</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="javax.persistence.transactionType">RESOURCE_LOCAL</prop>
            </props>
        </property>
    </bean>

    <!-- EH CACHE -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="cacheManagerName" value="productionReadyApplicationCacheManager"/>
        <property name="shared" value="true"/>
    </bean>
    <bean id="productionReadyApplicationCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cacheName" value="productionReadyApplicationCache"/>
        <property name="diskExpiryThreadIntervalSeconds" value="120"/>
        <property name="diskPersistent" value="false"/>
        <property name="eternal" value="false"/>
        <property name="maxElementsInMemory" value="10000"/>
        <property name="maxElementsOnDisk" value="20000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
        <property name="overflowToDisk" value="false"/>
        <!-- 1800 seconds = 30 mins -->
        <property name="timeToIdle" value="1800"/>
        <property name="timeToLive" value="1800"/>
    </bean>

    <management:eh-cache-management-service cache-manager="cacheManager" mbean-server="mbeanServer"/>


    <!-- CXF -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <bean id="responseTimeFeature" class="org.apache.cxf.management.interceptor.ResponseTimeFeature"/>

    <cxf:bus id="cxf" name="mybus">
        <cxf:features>
            <cxf:logging/>
            <ref bean="responseTimeFeature"/>
        </cxf:features>
    </cxf:bus>

    <bean id="org.apache.cxf.management.InstrumentationManager"
          class="org.apache.cxf.management.jmx.InstrumentationManagerImpl">
        <property name="server" ref="mbeanServer"/>
        <property name="enabled" value="true"/>
        <property name="createMBServerConnectorFactory" value="false"/>
    </bean>
    <bean id="CounterRepository" class="org.apache.cxf.management.counters.CounterRepository">
        <property name="bus" ref="cxf"/>
    </bean>
    <bean id="helloWorldServiceImpl" class="fr.xebia.productionready.service.HelloWorldServiceImpl"/>
    <jaxws:endpoint id="helloWorldService" implementor="#helloWorldServiceImpl" address="/helloWorldService"
                    endpointName="se:helloWorldServiceSOAP"
                    serviceName="se:helloWorldService" xmlns:se="http://www.xebia.fr/productionready/webservice">
        <jaxws:properties>
            <entry key="faultStackTraceEnabled" value="true"/>
        </jaxws:properties>
    </jaxws:endpoint>

    <!-- THREAD POOL -->
    <management:executor-service id="helloWorldServiceListenerThreadPool" pool-size="1-3" queue-capacity="15"/>

    <management:executor-service id="zeVerySlowServiceExecutorThreadPool" pool-size="1-3" queue-capacity="15"/>

    <management:executor-service id="anotherVerySlowServiceExecutorThreadPool" pool-size="1-3" queue-capacity="15"/>


    <!-- BUSINESS COMPONENTS -->
    <bean class="fr.xebia.productionready.Initializer">
        <property name="dataSource" ref="dataSource"/>
        <property name="userDetailsManager" ref="userDetailsManager"/>
    </bean>

    <bean id="zeBuggyServiceImpl" class="fr.xebia.productionready.backend.zebuggyservice.ZeBuggyServiceImpl"/>
    <bean name="zeBuggyService" class="fr.xebia.productionready.backend.zebuggyservice.ZeBuggyServiceMonitoringImpl">
        <property name="zeBuggyService" ref="zeBuggyServiceImpl"/>
    </bean>

    <bean id="zeNoisyService" class="fr.xebia.productionready.backend.zenoisyservice.ZeNoisyService"/>

    <bean id="zeSlowServiceImpl" class="fr.xebia.productionready.backend.zeslowservice.ZeSlowServiceImpl"/>
    <bean id="zeSlowService" class="fr.xebia.productionready.backend.zeslowservice.ZeSlowServiceBoundedImpl">
        <property name="zeSlowService" ref="zeSlowServiceImpl"/>
    </bean>

    <bean id="anotherVerySlowService"
          class="fr.xebia.productionready.backend.anotherveryslowservice.AnotherVerySlowServiceImpl"/>
    <bean id="zeVerySlowService"
          class="fr.xebia.productionready.backend.zeveryslowservice.ZeVerySlowServiceImpl"/>

    <bean id="zeVerySlowAggregatingServiceImpl"
          class="fr.xebia.productionready.service.ZeVerySlowAggregatingServiceImpl">
        <property name="anotherVerySlowService" ref="anotherVerySlowService"/>
        <property name="zeVerylowService" ref="zeVerySlowService"/>
    </bean>

    <bean id="zeVerySlowAggregatingServiceParallelImpl"
          class="fr.xebia.productionready.service.ZeVerySlowAggregatingServiceParallelImpl">
        <property name="anotherVerySlowService" ref="anotherVerySlowService"/>
        <property name="anotherVerySlowServiceExecutor" ref="anotherVerySlowServiceExecutorThreadPool"/>
        <property name="zeVerySlowService" ref="zeVerySlowService"/>
        <property name="zeVerySlowServiceExecutor" ref="zeVerySlowServiceExecutorThreadPool"/>
    </bean>

    <bean id="zeJmsService" class="fr.xebia.productionready.service.ZeJmsService">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

    <bean id="emailService"  class="fr.xebia.productionready.service.EmailService"/>

    <bean id="customerCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cacheName" value="fr.xebia.ws.customer.v1_0.Customer"/>
        <property name="maxElementsInMemory" value="50"/>
        <property name="maxElementsOnDisk" value="50"/>
        <property name="timeToLive" value="30"/>
    </bean>

    <bean id="customerServiceImpl" class="fr.xebia.ws.customer.v1_0.CustomerServiceImpl">
        <property name="customerCache" ref="customerCache"/>
        <property name="zeBuggyService" ref="zeBuggyService"/>
        <property name="zeJmsService" ref="zeJmsService"/>
        <property name="zeNoisyService" ref="zeNoisyService"/>
        <property name="zeSlowService" ref="zeSlowService"/>
        <property name="zeVerySlowAggregatingService" ref="zeVerySlowAggregatingServiceParallelImpl"/>
    </bean>

    <jaxws:endpoint id="customerService" implementor="#customerServiceImpl" address="/v1.0/customerService"
                    endpointName="se:customerServiceSOAP"
                    serviceName="se:customerService" xmlns:se="http://ws.xebia.fr/customer/v1_0"
                    wsdlLocation="/META-INF/wsdl/customerService-1.0.wsdl">
        <jaxws:features>
            <bean class="org.apache.cxf.feature.LoggingFeature"/>
            <bean class="org.apache.cxf.management.interceptor.ResponseTimeFeature"/>
        </jaxws:features>
        <jaxws:properties>
            <entry key="faultStackTraceEnabled" value="true"/>
        </jaxws:properties>
    </jaxws:endpoint>

    <!-- JMS -->
    <amq:broker useJmx="false" persistent="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:61616"/>
            <amq:transportConnector uri="vm://localhost"/>
        </amq:transportConnectors>
        <amq:systemUsage>
            <amq:systemUsage>
                <amq:memoryUsage>
                    <amq:memoryUsage limit="20 mb"/>
                </amq:memoryUsage>
                <amq:storeUsage>
                    <amq:storeUsage limit="100 mb"/>
                </amq:storeUsage>
                <amq:tempUsage>
                    <amq:tempUsage limit="100 mb"/>
                </amq:tempUsage>
            </amq:systemUsage>
        </amq:systemUsage>

    </amq:broker>

    <amq:connectionFactory id="activemqConnectionFactory" brokerURL="vm://localhost"/>

    <management:jms-caching-connection-factory id="cachingConnectionFactory"
                                               connection-factory="activemqConnectionFactory"/>

    <management:jms-connection-factory-wrapper id="nonCachingConnectionFactory"
                                               connection-factory="activemqConnectionFactory"/>
    <management:jms-connection-factory-wrapper id="connectionFactory" connection-factory="cachingConnectionFactory"/>

    <jms:listener-container connection-factory="nonCachingConnectionFactory" concurrency="5-10" cache="consumer"
                            container-class="fr.xebia.springframework.jms.ManagedDefaultMessageListenerContainer">
        <jms:listener destination="hello-world-queue" ref="helloWorldServiceMessageListener"/>
    </jms:listener-container>

    <bean id="helloWorldServiceMessageListener"
          class="fr.xebia.productionready.service.HelloWorldServiceMessageListener">
        <property name="dataSource" ref="dataSource"/>
        <property name="executorService" ref="helloWorldServiceListenerThreadPool"/>
    </bean>

    <util:properties id="smtpProperties">
        <prop key="mail.smtp.host">${mail_host}</prop>
        <prop key="mail.smtp.port">${mail_port}</prop>
        <prop key="mail.smtp.auth">${mail_secure}</prop>
        <prop key="mail.username">${mail_username}</prop>
        <prop key="mail.password">${mail_password}</prop>
        <prop key="mail.transport.protocol">smtp</prop>
        <prop key="mail.smtp.starttls.enable">true</prop>
        <prop key="mail.from">cleclerc@xebia.fr</prop>
        <prop key="mail.fromname">Cyrille Le Clerc</prop>
        <prop key="mail.debug">false</prop>
    </util:properties>

    <beans profile="prod">
        <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/prod-ready-app"/>

        <util:properties id="profileSpecificProperties">
            <prop key="hibernate_dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        </util:properties>
    </beans>

    <beans profile="default">
        <jdbc:embedded-database type="H2" id="dataSource">
        </jdbc:embedded-database>

        <util:properties id="profileSpecificProperties">
            <prop key="hibernate_dialect">org.hibernate.dialect.H2Dialect</prop>
            <prop key="mail_host">smtp.local</prop>
            <prop key="mail_port">587</prop>
            <prop key="mail_secure">true</prop>
            <prop key="mail_username">my_username</prop>
            <prop key="mail_password">my_password</prop>
        </util:properties>
    </beans>
</beans>
